#reference website to learn more https://editor.swagger.io/
openapi: 3.0.3
info:
  title: LocaLoyalty API
  description: API routes for LocaLoyalty business website and customer mobile app ***You must be logged into clerk from the front-end to test API because it is protected by the clerk middleware***
  version: "1.0.0"
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com

tags:
  - name: business
    description: APIs for the website that small business owners will access
  - name: customer
    description: APIs for the mobile app that end-users will access

paths:
  /business/sample:
    get:
      tags:
        - business
      summary: Sample endpoint
      description: Returns a sample data
      operationId: getBusinessSampleAPI
      responses:
        200:
          description: Successful response
  /business/profile:
    get:
      tags:
        - business
      summary: Get the current profile data of the user
      description: Queries user profile table in DB for data and sends it back to the front-end. No params required because the header includes the clerk ID already
      operationId: getBusinessProfile
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessProfile"
        500:
          description: User Does not exist in DB
    post:
      tags:
        - business
      summary: Update user profile info
      description: Updates the user profile information if valid. UserID is taken from header
      operationId: updateBusinessProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessProfile"
      responses:
        200:
          description: Successful response
        500:
          description: Failure
  /business/loyalty-program:
    get:
      tags:
        - business
      summary: Get the current loyalty program data of the user
      description: Queries user profile and loyalty program table in DB for data and sends it back to the front-end. No params required because the header includes the clerk ID already
      operationId: getBusinessLoyaltyProgram
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessLoyaltyProgram"
        500:
          description: User Does not exist in DB
    post:
      tags:
        - business
      summary: Update business owner's loyalty program and rewards info
      description: Updates the user loyalty program and rewards if valid. UserID is taken from header. A reward_id of null indicates that the reward is a new one and requires a DB insertion
      operationId: updateBusinessLoyaltyProgram
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessLoyaltyProgram"
      responses:
        200:
          description: Successful response
        500:
          description: Failure
components:
  schemas:
    BusinessProfile:
      type: object
      properties:
        businessName:
          type: string
          example: "Zhang's Bakery"
        businessPhone:
          type: string
          example: "1231231234"
        businessEmail:
          type: string
          example: "fake@gmail.com"
        address:
          type: string
          example: "123 real address NE"
        city:
          type: string
          example: "Calgary"
        province:
          type: string
          example: "Alberta"
        postalCode:
          type: string
          example: "A1B2C3"
        merchantID:
          type: string
          example: "123456789"
        apiKey:
          type: string
          example: "oqpweiopqwepioqiweop"
        businessImage:
          type: string
          description: "Either a file or a url that will be used to render the image"
        businessLogo:
          type: string
          description: "Either a file or a url that will be used to render the image"
        description:
          type: string
          example: "this is a really cool store"
    BusinessLoyaltyProgram:
      type: object
      properties:
        businessName:
          type: string
          example: "Zhang's Bakery"
        businessLogo:
          type: string
          example: "some aws s3 link"
        businessPhone:
          type: string
          example: "1231231234"
        businessEmail:
          type: string
          example: "fake@gmail.com"
        stampLife:
          type: number
          example: null
        stampCount:
          type: number
          example: 6
        scaleAmount:
          type: string
          example: "5"
        definedRewards:
          type: array
          items:
            $ref: "#/components/schemas/Reward"
    Reward:
      type: object
      properties:
        reward_id:
          type: number
          example: 8
        title:
          type: string
          example: "Free Pineapple Bun"
        requiredStamps:
          type: number
          example: 3
